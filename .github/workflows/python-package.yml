# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install isort
        python -m pip install black
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Code Quality
      env:
        FLAKE8_MAX_COMPLEXITY: 10
        PYLINT_FAIL_UNDER: 6
        MAX_LINE_LENGTH: 127
      run: |
        # run auto formatters
        isort .
        black .
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude venv,test
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=$FLAKE8_MAX_COMPLEXITY --max-line-length=$MAX_LINE_LENGTH --statistics --exclude venv,test
        # ensure code quality is high
        pylint $( find . -iname "*.py" | grep -vE "test|venv|__init__ " ) --max-line-length=$MAX_LINE_LENGTH --fail-under $PYLINT_FAIL_UNDER
    - name: Test
      run: |
        python -m unittest discover test
